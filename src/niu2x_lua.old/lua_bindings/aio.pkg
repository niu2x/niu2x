$ #include <niu2x/aio.h>
$ #include <niu2x/lua_bindings/tolua_fix.h>

namespace nx {
namespace aio {

enum status {
    ok = 0,
    fail,
};

enum wait_type {
    wait_all = 0,
    wait_once,
    no_wait,
};

class event_loop {
   struct rid {
       uint16_t id;

       rid();
       ~rid();
   };

   static std::shared_ptr<event_loop> create();

   void run(int p_type);
   void run();

   rid create_tcp();
   void destory_tcp(rid tcp_id);

   void connect(rid tcp_id, const char* address, uint16_t port, nx_luafunction callback);

   void start_read(rid stream_id, nx_luafunction callback);
   void stop_read(rid stream_id);

};

}
}